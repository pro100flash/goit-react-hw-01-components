{"version":3,"sources":["components/User/userProfile.module.css","components/Statistic/Statistic.module.css","components/FriendsList/Friends.list.module.css","components/Transactions/TransactionHistory.module.css","components/User/UserProfile.js","components/Statistic/Statistic.js","components/FriendsList/FriendsList.js","components/Transactions/TransactionHistory.js","App.js","index.js"],"names":["module","exports","UserProfile","avatar","name","tag","url","location","stats","class","styles","profile","description","src","alt","href","target","rel","label","quantity","posts","followers","following","randomColor","rgbNum","Math","floor","random","r","g","b","Statistic","title","className","statistics","style","backgroundColor","statList","map","percentage","id","item","FriendsList","friends","friendlist","friend","status","color","isOnline","width","prototypes","PropTypes","string","bool","isequired","TransactionHistory","items","transTable","table","tableBody","tableData","type","toUpperCase","slice","amount","currency","prototype","isRequired","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,YAAc,iCAAiC,OAAS,4BAA4B,KAAO,0BAA0B,IAAM,yBAAyB,SAAW,8BAA8B,MAAQ,2BAA2B,SAAW,gC,iBCApSD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,MAAQ,yBAAyB,SAAW,4BAA4B,KAAO,wBAAwB,MAAQ,yBAAyB,WAAa,gC,gBCAlND,EAAOC,QAAU,CAAC,QAAU,8BAA8B,WAAa,iCAAiC,KAAO,2BAA2B,OAAS,6BAA6B,OAAS,6BAA6B,KAAO,6B,gBCA7ND,EAAOC,QAAU,CAAC,WAAa,yC,ktGCwChBC,EAtCK,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MACpD,OACI,sBAAKC,MAAOC,IAAOC,QAAnB,UACI,sBAAKF,MAAOC,IAAOE,YAAnB,UACI,qBAAKH,MAAOC,IAAOP,OAAQU,IAAKV,EAAQW,IAAI,gBAC5C,mBAAGL,MAAOC,IAAON,KAAjB,SAAwBA,IACxB,mBAAGW,KAAMT,EAAKU,OAAO,SAASC,IAAI,aAAlC,SACA,oBAAGR,MAAOC,IAAOL,IAAjB,cAAwBA,OAExB,mBAAGI,MAAOC,IAAOH,SAAjB,SAA4BA,OAEhC,qBAAIE,MAAOC,IAAOF,MAAlB,UACI,+BACI,sBAAMC,MAAOC,IAAOQ,MAApB,mBACA,sBAAMT,MAAOC,IAAOS,SAApB,SAA+BX,EAAMY,WAEzC,+BACI,sBAAMX,MAAOC,IAAOQ,MAApB,uBACA,sBAAMT,MAAOC,IAAOS,SAApB,SAA+BX,EAAMa,eAEzC,+BACI,sBAAMZ,MAAOC,IAAOQ,MAApB,uBACA,sBAAMT,MAAOC,IAAOS,SAApB,SAA+BX,EAAMc,sB,gBCtBzD,SAASC,IACP,IAAMC,EAAS,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,WAC/BC,EAAIJ,IACJK,EAAIL,IACJM,EAAIN,IAEV,MAAM,OAAN,OAAcI,EAAd,YAAmBC,EAAnB,YAAwBC,EAAxB,KAGF,IA6BeC,EA7BG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOxB,EAAY,EAAZA,MAC1B,OACE,0BAASyB,UAAWvB,IAAOwB,WAA3B,UACE,oBAAIC,MAAO,CAAEC,gBAAiBb,KAAiBd,MAAOC,IAAOsB,MAA7D,SACGA,IAEH,oBAAIvB,MAAOC,IAAO2B,SAAlB,SACG7B,EAAM8B,KAAI,gBAAGpB,EAAH,EAAGA,MAAOqB,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,GAAtB,OACT,qBAEE/B,MAAOC,IAAO+B,KACdN,MAAO,CAAEC,gBAAiBb,KAH5B,UAKE,sBAAMd,MAAOC,IAAOQ,MAApB,SAA4BA,IAC5B,uBAAMT,MAAOC,IAAO6B,WAApB,UAAiCA,EAAjC,SALKC,Y,gCCVjB,IAAME,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,qBAAKlC,MAAOC,IAAOiC,QAAnB,SACE,oBAAIlC,MAAOC,IAAOkC,WAAlB,SACGD,EAAQL,KAAI,SAACO,GAAD,OACX,qBAAIpC,MAAOC,IAAO+B,KAAlB,UACE,uBACEhC,MAAOC,IAAOoC,OACdX,MAAO,CAAEY,OAhBDD,EAgBqBD,EAAOG,SAf5CF,EACK,UAEA,YAUC,UAIG,IAJH,YAOA,qBACErC,MAAOC,IAAOP,OACdU,IAAKgC,EAAO1C,OACZW,IAAK+B,EAAOzC,KACZ6C,MAAM,OAGR,mBAAGxC,MAAOC,IAAON,KAAjB,SAAwByC,EAAOzC,SAfJyC,EAAOL,IAb9C,IAAsBM,UAoCtBJ,EAAYQ,WAAa,CACvB/C,OAAQgD,IAAUC,OAClBhD,KAAM+C,IAAUC,OAChBJ,SAAUG,IAAUE,KACpBb,GAAIW,IAAUC,OAAOE,WAGRZ,Q,gBCtCf,IAAMa,EAAqB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,qBAAK/C,MAAOC,IAAO+C,WAAnB,SACE,wBAAOhD,MAAM,sBAAb,UACE,uBAAOA,MAAOC,IAAOgD,MAArB,SACE,+BACE,sCACA,wCACA,+CAGJ,uBAAOjD,MAAOC,IAAOiD,UAArB,SACGH,EAAMlB,KAAI,SAACG,GAAD,OACT,+BACE,oBAAIhC,MAAOC,IAAOkD,UAAlB,UAnBYR,EAmBmCX,EAAKoB,KAlBnDT,EAAO,GAAGU,cAAgBV,EAAOW,MAAM,MAmBxC,oBAAItD,MAAOC,IAAOkD,UAAlB,SAA8BnB,EAAKuB,SACnC,oBAAIvD,MAAOC,IAAOkD,UAAlB,SAA8BnB,EAAKwB,aAH5BxB,EAAKD,IAlB1B,IAA0BY,aA8B1BG,EAAmBW,UAAY,CAC7B1B,GAAIW,IAAUC,OAAOe,WACrBN,KAAMV,IAAUC,OAChBY,OAAQb,IAAUC,OAAOe,WACzBF,SAAUd,IAAUC,QAGPG,Q,+BCZAa,MAlBf,WACE,OACE,gCACE,cAAC,EAAD,CACEjE,OAAQkE,EAAKlE,OACbC,KAAMiE,EAAKjE,KACXC,IAAKgE,EAAKhE,IACVC,IAAK+D,EAAK/D,IACVC,SAAU8D,EAAK9D,SACfC,MAAO6D,EAAK7D,QAEd,cAAC,EAAD,CAAWwB,MAAM,eAAexB,MAAO8D,IACvC,cAAC,EAAD,CAAa3B,QAASA,IACtB,cAAC,EAAD,CAAoBa,MAAOe,IAX7B,Q,iBCPJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.e3a05e00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"userProfile_profile__3D0c2\",\"description\":\"userProfile_description__TWLYr\",\"avatar\":\"userProfile_avatar__kmBP2\",\"name\":\"userProfile_name__3mzrQ\",\"tag\":\"userProfile_tag__3S_Vl\",\"location\":\"userProfile_location__1qWa-\",\"stats\":\"userProfile_stats__F-678\",\"quantity\":\"userProfile_quantity__3o0EG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__2w9qV\",\"title\":\"Statistic_title__3xOTu\",\"statList\":\"Statistic_statList__3rBxL\",\"item\":\"Statistic_item__2IpXB\",\"label\":\"Statistic_label__1SW_6\",\"percentage\":\"Statistic_percentage__RzK_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_list_friends__1wy9O\",\"friendlist\":\"Friends_list_friendlist__3TdEi\",\"item\":\"Friends_list_item__OrgMe\",\"avatar\":\"Friends_list_avatar__3kLJm\",\"status\":\"Friends_list_status__2ONMD\",\"name\":\"Friends_list_name__359vG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transTable\":\"TransactionHistory_transTable__2KaFQ\"};","import styles from \"./userProfile.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst UserProfile = ({avatar, name, tag, url, location, stats}) => {\r\n    return (\r\n        <div class={styles.profile}>\r\n            <div class={styles.description}>\r\n                <img class={styles.avatar} src={avatar} alt=\"User avatar\" />\r\n                <p class={styles.name}>{name}</p>\r\n                <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n                <p class={styles.tag}>@{tag}</p>\r\n                </a>\r\n                <p class={styles.location}>{location}</p>\r\n            </div>\r\n            <ul class={styles.stats}>\r\n                <li>\r\n                    <span class={styles.label}>Posts</span>\r\n                    <span class={styles.quantity}>{stats.posts}</span>\r\n                </li>\r\n                <li>\r\n                    <span class={styles.label}>Followers</span>\r\n                    <span class={styles.quantity}>{stats.followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span class={styles.label}>Following</span>\r\n                    <span class={styles.quantity}>{stats.following}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nUserProfile.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    stats: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default UserProfile;","import styles from \"./Statistic.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction randomColor() {\r\n  const rgbNum = () => Math.floor(Math.random() * 256);\r\n  const r = rgbNum();\r\n  const g = rgbNum();\r\n  const b = rgbNum();\r\n\r\n  return `rgb(${r},${g},${b})`;\r\n}\r\n\r\nconst Statistic = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      <h2 style={{ backgroundColor: randomColor() }} class={styles.title}>\r\n        {title}\r\n      </h2>\r\n      <ul class={styles.statList}>\r\n        {stats.map(({ label, percentage, id }) => (\r\n          <li\r\n            key={id}\r\n            class={styles.item}\r\n            style={{ backgroundColor: randomColor() }}\r\n          >\r\n            <span class={styles.label}>{label}</span>\r\n            <span class={styles.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistic.propTypes = {\r\n  title: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","import styles from \"./Friends.list.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction friendOnline(status) {\r\n  if (status) {\r\n    return \"#21db21\";\r\n  } else {\r\n    return \"#d40606\";\r\n  }\r\n}\r\n\r\nconst FriendsList = ({ friends }) => {\r\n  return (\r\n    <div class={styles.friends}>\r\n      <ul class={styles.friendlist}>\r\n        {friends.map((friend) => (\r\n          <li class={styles.item} key={friend.id}>\r\n            <span\r\n              class={styles.status}\r\n              style={{ color: friendOnline(friend.isOnline) }}\r\n            >\r\n              {\" \"}\r\n              ‚óè\r\n            </span>\r\n            <img\r\n              class={styles.avatar}\r\n              src={friend.avatar}\r\n              alt={friend.name}\r\n              width=\"48\"\r\n            />\r\n\r\n            <p class={styles.name}>{friend.name}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nFriendsList.prototypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n  id: PropTypes.string.isequired,\r\n};\r\n\r\nexport default FriendsList;\r\n","import styles from \"./TransactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction upperFirstLatter(string) {\r\n  let newStr = string[0].toUpperCase() + string.slice(1);\r\n  return newStr;\r\n}\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <div class={styles.transTable}>\r\n      <table class=\"transaction-history\">\r\n        <thead class={styles.table}>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class={styles.tableBody}>\r\n          {items.map((item) => (\r\n            <tr key={item.id}>\r\n              <td class={styles.tableData}>{upperFirstLatter(item.type)}</td>\r\n              <td class={styles.tableData}>{item.amount}</td>\r\n              <td class={styles.tableData}>{item.currency}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTransactionHistory.prototype = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import UserProfile from \"./components/User/UserProfile\";\r\nimport Statistic from \"./components/Statistic/Statistic\";\r\nimport FriendsList from \"./components/FriendsList/FriendsList\";\r\nimport TransactionHistory from \"./components/Transactions/TransactionHistory\";\r\n\r\nimport user from \"./data/user.json\";\r\nimport statisticalData from \"./data/statistical-data.json\";\r\nimport friends from \"./data/friends.json\";\r\nimport transactions from \"./data/transactions.json\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <UserProfile\r\n        avatar={user.avatar}\r\n        name={user.name}\r\n        tag={user.tag}\r\n        url={user.url}\r\n        location={user.location}\r\n        stats={user.stats}\r\n      />\r\n      <Statistic title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendsList friends={friends} />\r\n      <TransactionHistory items={transactions} />;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport ModernNormalize from \"react-modern-normalize\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ModernNormalize>\n      <App />\n    </ModernNormalize>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}